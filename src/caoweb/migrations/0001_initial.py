# Generated by Django 3.0 on 2019-12-13 17:18

import django.db.models.deletion
from django.db import migrations, models

import caoweb.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Board",
            fields=[
                (
                    "id",
                    models.SlugField(max_length=10, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(max_length=2500)),
            ],
            options={"db_table": "board"},
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=250)),
                ("comment", models.TextField(blank=True, max_length=2500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pic",
                    models.ImageField(
                        blank=True,
                        height_field="pic_height",
                        null=True,
                        upload_to=caoweb.models._upload_to,
                        width_field="pic_width",
                    ),
                ),
                ("pic_height", models.PositiveIntegerField(null=True)),
                ("pic_width", models.PositiveIntegerField(null=True)),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        height_field="thumbnail_height",
                        null=True,
                        upload_to="thumbnails/",
                        width_field="thumbnail_width",
                    ),
                ),
                ("thumbnail_height", models.PositiveIntegerField(null=True)),
                ("thumbnail_width", models.PositiveIntegerField(null=True)),
                (
                    "board",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threads",
                        to="caoweb.Board",
                    ),
                ),
                (
                    "parent_thread",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="caoweb.Post",
                    ),
                ),
            ],
            options={"db_table": "post"},
        ),
        migrations.AddConstraint(
            model_name="post",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("parent_thread__isnull", True),
                        models.Q(_negated=True, subject=""),
                    ),
                    models.Q(("parent_thread__isnull", False), ("subject", "")),
                    _connector="OR",
                ),
                name="has_subject_iff_is_thread",
            ),
        ),
        migrations.AddConstraint(
            model_name="post",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("board__isnull", False), ("parent_thread__isnull", True)),
                    models.Q(("board__isnull", True), ("parent_thread__isnull", False)),
                    _connector="OR",
                ),
                name="has_board_iff_is_thread",
            ),
        ),
        migrations.AddConstraint(
            model_name="post",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("parent_thread__isnull", True), ("pic__isnull", False)),
                    ("parent_thread__isnull", False),
                    _connector="OR",
                ),
                name="has_pic_if_is_thread",
            ),
        ),
    ]
